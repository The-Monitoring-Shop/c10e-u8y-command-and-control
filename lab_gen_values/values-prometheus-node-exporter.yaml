configmapReload:
  prometheus:
    enabled: false

server:
  extraFlags:
    - "enable-feature=exemplar-storage"
  retention: 2h
  global:
    scrape_interval: 15s
    scrape_timeout: 3s
    #evaluation_interval: 30s
  persistentVolume:
    enabled: false
  service:
    servicePort: 9090
  resources:
    limits:
      memory: 8192Mi

serverFiles:
  prometheus.yml:
    rule_files:
      - /etc/config/recording_rules.yml
      - /etc/config/alerting_rules.yml
      ## Below two files are DEPRECATED will be removed from this default values file
      - /etc/config/rules
      - /etc/config/alerts

    remote_write:
      - url: http://chronocollector.collectors.svc.cluster.local:3030/remote/write
        queue_config:
          capacity: 2500
          max_shards: 200
          min_shards: 3
          max_samples_per_send: 500
        metadata_config:
          max_samples_per_send: 500

    scrape_configs:

      - job_name: "opentelemetry-community-demo"
        honor_labels: true

        kubernetes_sd_configs:
          - role: pod

        relabel_configs:
          - source_labels:
              [__meta_kubernetes_pod_annotation_opentelemetry_community_demo]
            action: keep
            regex: true

          # Added to restrict target to only port from annotation
          - source_labels:
              [__address__, __meta_kubernetes_pod_annotation_prometheus_io_port]
            action: replace
            regex: ([^:]+)(?::\d+)?;(\d+)
            replacement: $1:$2
            target_label: __address__

        # Added as os_description was showing as high memory usage on tsdb-status and isnt required
        metric_relabel_configs:
          - action: labeldrop
            regex: os_description


      - job_name: node-exporter
        static_configs:
          - targets:
              ["prometheus-node-exporter.collectors.svc.cluster.local:9100"]


      # Below are ones in default chart

      - job_name: prometheus
        scrape_interval: 30s
        static_configs:
          - targets:
              - localhost:9090

        # Added as os_description was showing as high memory usage on tsdb-status and isnt required
        metric_relabel_configs:
          - action: labeldrop
            regex: os_description


      # A scrape configuration for running Prometheus on a Kubernetes cluster.
      # This uses separate scrape configs for cluster components (i.e. API server, node)
      # and services to allow each to use different authentication configs.
      #
      # Kubernetes labels will be added as Prometheus labels on metrics via the
      # `labelmap` relabeling action.


      # Scrape config for service endpoints.
      #
      # The relabeling allows the actual service scrape endpoint to be configured
      # via the following annotations:
      #
      # * `prometheus.io/scrape`: Only scrape services that have a value of
      # `true`, except if `prometheus.io/scrape-slow` is set to `true` as well.
      # * `prometheus.io/scheme`: If the metrics endpoint is secured then you will need
      # to set this to `https` & most likely set the `tls_config` of the scrape config.
      # * `prometheus.io/path`: If the metrics path is not `/metrics` override this.
      # * `prometheus.io/port`: If the metrics are exposed on a different port to the
      # service then set this appropriately.
      # * `prometheus.io/param_<parameter>`: If the metrics endpoint uses parameters
      # then you can set any parameter
      - job_name: "kubernetes-service-endpoints"
        honor_labels: true

        kubernetes_sd_configs:
          - role: endpoints

        relabel_configs:
          - source_labels:
              [__meta_kubernetes_service_annotation_prometheus_io_scrape]
            action: keep
            regex: true
          - source_labels:
              [__meta_kubernetes_service_annotation_prometheus_io_scrape_slow]
            action: drop
            regex: true
          - source_labels:
              [__meta_kubernetes_service_annotation_prometheus_io_scheme]
            action: replace
            target_label: __scheme__
            regex: (https?)
          - source_labels:
              [__meta_kubernetes_service_annotation_prometheus_io_path]
            action: replace
            target_label: __metrics_path__
            regex: (.+)
          - source_labels:
              [
                __address__,
                __meta_kubernetes_service_annotation_prometheus_io_port,
              ]
            action: replace
            target_label: __address__
            regex: (.+?)(?::\d+)?;(\d+)
            replacement: $1:$2
          - action: labelmap
            regex: __meta_kubernetes_service_annotation_prometheus_io_param_(.+)
            replacement: __param_$1
          - action: labelmap
            regex: __meta_kubernetes_service_label_(.+)
          - source_labels: [__meta_kubernetes_namespace]
            action: replace
            target_label: namespace
          - source_labels: [__meta_kubernetes_service_name]
            action: replace
            target_label: service
          - source_labels: [__meta_kubernetes_pod_node_name]
            action: replace
            target_label: node

alertmanager:
  enabled: false

kube-state-metrics:
  enabled: true

prometheus-node-exporter:
  enabled: true

prometheus-pushgateway:
  enabled: false
